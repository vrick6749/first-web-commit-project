.Container1{
    display: grid; /*necessary to place this for a container to uphold the grid feature*/
    /*----------grid-template-columns: 70% 30%; ----The grid must be defined in terms of sizing before it can be used any child element will adhere to the number or sizing of the element and will automatically wrap around the given dimensions*/
    /*----------grid-template-columns: 1fr 1fr 1fr; ------ This is the recommended way to create templates rather than percentages or pixels.. much more even display..*/ 
    grid-template-columns: repeat(3, 1fr);/*This is the cleaner way to do the syntax above*/
    grid-column-gap: 1em;
    grid-row-gap: .5em;
    /* grid-gap:1em; This creates spacing between the elements of each container in the grid ACTS LIKE PADDING */

    grid-template-rows: repeat(3, 1fr);

    grid-template-areas: 
    "header header header"
    "main main ."
    ". . footer";
}

.Container1 > div{
    background:rgb(179, 107, 107);
}
.Container1 > div:nth-child(odd){/*This allows for the selection of every second element post the container div background and give it a different color*/
    background-color: aqua; 
}

.item1{
 color: red; 
 grid-area: header;
}

.item3{
    grid-area: main;
}